// Vitest Snapshot v1

exports[`fixtures > comments.ts 1`] = `
"import { ref, computed, toRefs } from 'vue';
import { useEffect } from 'react';
/* import { ref } from 'vue' */
// import { computed } from 'vue'

const a = {
  rel: \\"noreferrer\\",
  href: \\"https://github.com/antfu/vitesse\\",
  target: \\"_blank\\"
}

const foo = ref(0)
const bar = computed(() => {})

const b = { class: \\"text-sm opacity-75\\" };
const templateLiteralWithDoubleSlash = \`http://\${useEffect()}\`
const templateLiteralWithPseudoComment = \`/* \${toRefs()} */\`
// reactive
//reactive
/*reactive*/
/**/
"
`;

exports[`fixtures > custom.js 1`] = `
"import customDefault from 'default';
const a = customDefault(customNamed())
const a = customDefaultAlias()
"
`;

exports[`fixtures > dollar.js 1`] = `
"import { $ } from 'jquery';
$('hi')
"
`;

exports[`fixtures > existing6.jsx 1`] = `
"import { computed } from 'vue';
const a = computed(() => /^(https?:\\\\/\\\\/|\\\\/\\\\/)/.test(props.to))
"
`;

exports[`fixtures > existing8.ts 1`] = `
"import { bar } from 'specifier2'
export { bar }
import foo from 'specifier1' // error
export { foo }
"
`;

exports[`fixtures > export-default.ts 1`] = `
"import { ref } from 'vue';
export default ref(
  1
)
"
`;

exports[`fixtures > false-regex.ts 1`] = `
"import { ref } from 'vue';
// https://github.com/antfu/unplugin-auto-import/issues/220
const value = 1 / 1 + ref().val / 1
console.log(value)
"
`;

exports[`fixtures > function-call.ts 1`] = `
"import { ref } from 'vue';
useFoo(ref, 1)
"
`;

exports[`fixtures > glob.ts 1`] = `
"import { ref } from 'vue';
const modules = import.meta.glob(\\"/src/nested/*.vue\\");
const msg = ref(\\"Global Imports\\");
"
`;

exports[`fixtures > import-all.ts 1`] = `
"import * as THREE from 'three';
const scene = new THREE.Scene()
"
`;

exports[`fixtures > in.js 1`] = `
"import { Foo, Bar } from 'foobar';
Foo instanceof Bar
"
`;

exports[`fixtures > instanceof.js 1`] = `
"import { Foo, Bar } from 'foobar';
// Foo instanceof Bar
Foo instanceof Bar
"
`;

exports[`fixtures > no-eol.js 1`] = `
"import { Foo } from 'foobar';
Foo"
`;

exports[`fixtures > props.ts 1`] = `
"import { toRefs } from 'vue';
const a = z.ref(0)
console.log({
  ...toRefs(a)
})
"
`;

exports[`fixtures > prototype.ts 1`] = `
"import { foobar } from 'foobar';
const a = Object.keys(foobar)
const c = a.toString()
"
`;

exports[`fixtures > react.jsx 1`] = `
"import { useState } from 'react';
export function Component() {
  const [count, setCount] = useState()

  return <div>{ count }</div>
}
"
`;

exports[`fixtures > switch.js 1`] = `
"import { Foo, Bar } from 'foobar';
switch (mode) {
  case Foo:
    return '1'
  case Bar + 1:
    return '2'
}
"
`;

exports[`fixtures > template-literal.ts 1`] = `
"import { ref, reactive, computed, toRefs } from 'vue';
import { fooConst } from 'foo';
import { $ } from 'jquery';
import { useState, useEffect, useRef } from 'react';
const z = \`bar-\${
  ref()
}-\${fooConst}\`
const withRegex = /\`/
const secondLine = [$, \`\`]
const nestedSingleQuotes = \`'\${reactive()}'\`
const nestedDoubleQuotes = \`\\"\${computed()}\\"\`
const nestedTemplate = \`prefix1\${\`prefix2\${toRefs()}\`}\`
const multilineTemplate = \`\${useState(
)}\`

const multilineNestedTemplateAndQuotes = \`\\"'\${useEffect(\`'\${
useRef(
)
}'\`)}\\"'\`
"
`;

exports[`fixtures > template-ref.vue 1`] = `
"import { ref } from 'vue';
<template>
  <div ref=\\"divRef\\"></div>
</template>

<script setup>
const divRef = ref(null)
</script>
"
`;

exports[`fixtures > template-tag.ts 1`] = `
"import { ref } from 'vue';
const z = ref\`barfoo\`
"
`;

exports[`fixtures > ternary.js 1`] = `
"import { Foo, Bar } from 'foobar';
Foo instanceof Bar ? true : false
"
`;

exports[`fixtures > ts-generic.ts 1`] = `
"import { useState } from 'react';
useState<number>()
"
`;

exports[`fixtures > vue.js 1`] = `
"import { ref } from 'vue';
const a = ref(0)
"
`;
